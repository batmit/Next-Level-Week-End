/*Pra funcionar deve estar no mesmo nível, ou seja, na mesma pasta*/
/*Para fazer funcionar tem que colocar: "/style.css" porque aí vai para o root, raiz*/
/*CSS = Cascating StyleSheet*/
:root{
    --color-background: #F0F0F7;
    --color-primary-lighter: #9871F5;            /*São todos variáveis no CSS*/
    --color-primary-light: #916BEA;
    --color-primary: #47248F;
    --color-primary-dark: #774DD6;
    --color-primary-darker: #6842C2;
    --color-secondary: #04d361;
    --color-secondary-dark: #04bf58;
    --color-title-in-primary: #ffffff;
    --color-text-in-primary: #d4c2ff;
    --color-text-title: #32264d;
    --color-text-complement: #9c98a6;
    --color-text-base: #6a6180;
    --color-line-in-white: #e6e6f0;
    --color-input-background: #f8f8fc;
    --color-button-text: #ffffff;
    --color-box-base: #ffffff;
    --color-box-footer: #fafafc;
    --color-small-info: #c1bccc;
    font-size: 60%; /*controle das medidas rem*/ 
    /*controlhe das fontes*/
    /*Tamanho das fontes padão: 16px, 100%, 1rem*/
    /*pixels é uma unidade de medida forte, % é relativa a que está acima dele,rem é relativo ao root, obedece ele*/
}

html,
body{                         /*passa tudo no body para esse formato*/
    height: 100vh;
}

body{
    /*posicionamento: */
    /* height: 100vh; */ /*isso mostra a altura, vh é a medida*/
    background-color: var(--color-background);
    display: flex; /*todos os elementos passam a ser flexíveis, eles ficavam um em cima do outro, menos os in line, agora ficam um em cima do outro*/
    /*display é a exibição do elemento*/
    align-items: center; /*passa tudo para o centro*/
    justify-content: center;/*os dois so funcionam se tiver o flex*/ 
    /*o justify center justifica o texto*/
}

body,
input,
button,
textarea {
    font: 500 1.6rem Poppins;
    color: var(--color-text-base);
    /*tambem pode ser: */
    /*font-weight:500 ;*/  /*muda o peso da fonte*/
    /*font-family: Poppins; */  /*o tipo*/
    /* font-size: 1.6rem; */ /*o tamanho*/

}
/*o efeito cascata acontece que se você colocar 50% no root e  100% no body, o body vai pegar 100% de 50%, o mesmo com o h1 e etc */


/* h1 span{ */
    /* font-size: 0.8em;            Vai mudar o span */
/* } */

/*MOBILE FIRST: você faz um site ou outra coisa para funcionar primeiro no mobile para depois ir para o desktop*/
/*responsividade: não importa o dispositivo, meu site vai ficar bonito nele*/

*{  /*esse asterisco é um seletor universal, seleciona tudo*/
    margin: 0;
    padding: 0;
    box-sizing: border-box;

}


/* #containder{ */
    /*box models: */
    /* border: 1px solid red;            borda de 1 pixel, reta e vermelha */
    /* padding: 10px 40px 60px 2px;          preenchimento em cima, em baixo, e dos lados, como se fosse um espaço vazio */
        /*ordem: cima,direita, em baixo e esquerda */
        /*quando eu coloco so 1 valor ele passa a se aplicar aos 4, quando coloco 2 ele se divide, em cima e em baixo e dos lados*/
        /*posso fazer paddings separados, um em cada linha*/
    /* margin: 40px  ; */
    /* width: 300px; largura */
    /* height: 300px; altura */
    /* box-sizing: border-box;  mede o tamanho da caixa, por padrão mede o conteúdo, com esse border-box ele tenta se virar para conseguir manter no tamanho, sem ajustar */


    /* } */
#containder{
    width: 90vw; /*largura*/
    max-width: 700px;/*largura máxima*/
    /* border: 1px solid red; a borda não vai superar o valor de cima */

}

@media(min-width: 700px){     /*com o mínimo de 700 px vai fazer o que está escrito*/
    :root{
        font-size: 62.5%;/*com isso todo 1rem vai ser relativo a 10px, pois o font-size padrão é de 16px,
        qunado eu faço o que fiz em cima aí a partir de agora 1rem vale 10px*/

    }
}